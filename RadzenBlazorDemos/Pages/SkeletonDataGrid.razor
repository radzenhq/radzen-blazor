@using RadzenBlazorDemos.Data
@using RadzenBlazorDemos.Models.Northwind

@inherits DbContextPage

<style>
    .rz-datatable-loading-content {
        position: initial !important;
        left: initial !important;
        top: initial !important;
        transform: initial !important;
    }
</style>

<div class="rz-p-12">
    <RadzenStack Orientation="Orientation.Vertical" Gap="1rem">
        <RadzenText TextStyle="TextStyle.H6">DataGrid with Skeleton Loading</RadzenText>
        
        <RadzenButton Text="Toggle Loading" Click="@ToggleLoading" Style="margin-bottom: 20px;" />
        
        @if (isLoading)
        {
            @RenderLoading()
        }
        else
        {
            <RadzenDataGrid style="height: 335px" @ref="grid" Count="@count" Data="@employees" LoadData="@LoadData"
                            AllowSorting="true" AllowFiltering="true" AllowPaging="true" PageSize="5" IsLoading="@isLoadingGrid"
                           PagerHorizontalAlign="HorizontalAlign.Center" ColumnWidth="200px">
                <Columns>
                    <RadzenDataGridColumn Property="@nameof(Employee.EmployeeID)" Filterable="false" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
                    <RadzenDataGridColumn Title="Photo" Frozen="true" Sortable="false" Filterable="false" Width="80px" TextAlign="TextAlign.Center" >
                        <Template Context="data">
                            <RadzenImage Path="@data.Photo" class="rz-gravatar" AlternateText="@(data.FirstName + " " + data.LastName)" />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Property="@nameof(Employee.FirstName)" Title="First Name" Frozen="true" Width="160px"/>
                    <RadzenDataGridColumn Property="@nameof(Employee.LastName)" Title="Last Name" Width="160px"/>
                    <RadzenDataGridColumn Property="@nameof(Employee.Title)" Title="Job Title" Width="200px"/>
                    <RadzenDataGridColumn Property="@nameof(Employee.TitleOfCourtesy)" Title="Title" Width="120px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.BirthDate)" Title="Birth Date" FormatString="{0:d}" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.HireDate)" Title="Hire Date" FormatString="{0:d}" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.Address)" Title="Address" Width="200px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.City)" Title="City" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.Region)" Title="Region" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.PostalCode)" Title="Postal Code" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.Country)" Title="Country" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.HomePhone)" Title="Home Phone" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.Extension)" Title="Extension" Width="160px" />
                    <RadzenDataGridColumn Property="@nameof(Employee.Notes)" Title="Notes" Width="300px" />
                </Columns>
                <LoadingTemplate>
                    @RenderLoading()
                </LoadingTemplate>
            </RadzenDataGrid>
        }
    </RadzenStack>
</div>

@code {
    RadzenDataGrid<Employee> grid;
    int count;
    IEnumerable<Employee> employees;
    bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // Start with loading state
        isLoading = true;
        await Task.Delay(2000); // Simulate loading delay
        await LoadData(new LoadDataArgs { Skip = 0, Top = 5 });
        isLoading = false;
    }

    async Task ToggleLoading()
    {
        isLoading = !isLoading;
        if (isLoading)
        {
            await Task.Delay(2000); // Simulate loading delay
            isLoading = false;
            StateHasChanged();
        }
    }

    bool isLoadingGrid = false;

    async Task LoadData(LoadDataArgs args)
    {
        isLoadingGrid = true;

        employees = Enumerable.Empty<Employee>();

        await Task.Yield();

        var query = dbContext.Employees.AsQueryable();

        if (!string.IsNullOrEmpty(args.Filter))
        {
            query = query.Where(grid.ColumnsCollection);
        }

        if (!string.IsNullOrEmpty(args.OrderBy))
        {
            query = query.OrderBy(args.OrderBy);
        }

        await Task.Delay(2000); // Simulate loading delay

        count = await Task.FromResult(query.Count());
        employees = await Task.FromResult(query.Skip(args.Skip.Value).Take(args.Top.Value).ToList());
    
        isLoadingGrid = false;
    }

    internal RenderFragment RenderLoading()
    {
        return __builder =>
        {
            <text>
                <!-- Skeleton loading state -->
                <div class="rz-p-4" style="border: 1px solid var(--rz-border-color); border-radius: 4px;">
                    <!-- Header skeleton -->
                    <div class="rz-mb-4">
                        <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 20px; margin-bottom: 8px;" />
                        <RadzenSkeleton Type="SkeletonType.Text" Style="width: 80%; height: 16px;" />
                    </div>

                    <!-- Table header skeleton -->
                    <div class="rz-mb-3">
                        <RadzenRow>
                            <RadzenColumn Size="2">
                                <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 16px;" />
                            </RadzenColumn>
                            <RadzenColumn Size="2">
                                <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 16px;" />
                            </RadzenColumn>
                            <RadzenColumn Size="3">
                                <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 16px;" />
                            </RadzenColumn>
                            <RadzenColumn Size="2">
                                <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 16px;" />
                            </RadzenColumn>
                            <RadzenColumn Size="3">
                                <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 16px;" />
                            </RadzenColumn>
                        </RadzenRow>
                    </div>

                    <!-- Table rows skeleton -->
                    @for (int i = 0; i < 5; i++)
                    {
                        <div class="rz-mb-2">
                            <RadzenRow>
                                <RadzenColumn Size="2">
                                    <RadzenSkeleton Type="SkeletonType.Circular" Style="width: 32px; height: 32px;" />
                                </RadzenColumn>
                                <RadzenColumn Size="2">
                                    <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 14px;" />
                                </RadzenColumn>
                                <RadzenColumn Size="3">
                                    <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 14px;" />
                                </RadzenColumn>
                                <RadzenColumn Size="2">
                                    <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 14px;" />
                                </RadzenColumn>
                                <RadzenColumn Size="3">
                                    <RadzenSkeleton Type="SkeletonType.Text" Style="width: 100%; height: 14px;" />
                                </RadzenColumn>
                            </RadzenRow>
                        </div>
                    }

                    <!-- Pagination skeleton -->
                    <div class="rz-mt-4">
                        <RadzenSkeleton Type="SkeletonType.Rounded" Style="width: 200px; height: 32px;" />
                    </div>
                </div>
            </text>
        };
    }
} 