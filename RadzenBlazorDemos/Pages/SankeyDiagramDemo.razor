@page "/sankey-demo"
@using Radzen.Blazor
@using System.Collections.Generic
@inject DialogService DialogService

<RadzenText TextStyle="TextStyle.H2" TagName="TagName.H1" class="rz-pt-8">
    Radzen Blazor Sankey Diagram
</RadzenText>

<RadzenText TextStyle="TextStyle.Subtitle1" class="rz-pb-4">
    Demonstration of the Radzen Blazor Sankey Diagram component for visualizing flow and relationships.
</RadzenText>

<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text="Interactive Demo">
            <RadzenCard class="rz-my-4">
                <RadzenText TextStyle="TextStyle.H5" class="rz-mb-4">Interactive Sankey Chart with All Features</RadzenText>
                
                <RadzenRow AlignItems="AlignItems.Start" class="rz-pb-4">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-mb-2">Node Width</RadzenText>
                        <RadzenNumeric @bind-Value="nodeWidth" Min="10" Max="50" Step="5" class="w-100" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-mb-2">Node Padding</RadzenText>
                        <RadzenNumeric @bind-Value="nodePadding" Min="0" Max="30" Step="2" class="w-100" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenText TextStyle="TextStyle.Body2" class="rz-mb-2">Node Alignment</RadzenText>
                        <RadzenDropDown @bind-Value="nodeAlignment" Data="@alignments" class="w-100" />
                    </RadzenColumn>
                </RadzenRow>
                
                <RadzenSankeyDiagram TNode="SankeyNode" TLink="SankeyLink"
                                   Nodes="@nodes" Links="@links" 
                                   NodeWidth="@nodeWidth" NodePadding="@nodePadding"
                                   NodeAlignment="@nodeAlignment" ColorScheme="ColorScheme.Pastel"
                                   MarginLeft="80" MarginRight="80" MarginTop="20" MarginBottom="20"
                                   Style="width: 100%; height: 400px;">
                </RadzenSankeyDiagram>
                
            </RadzenCard>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Energy Flow">
            <RadzenCard class="rz-my-4">
                <RadzenText TextStyle="TextStyle.H5" class="rz-mb-4">Energy Flow Example</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-mb-3">This example shows energy flow from sources through conversions to final usage.</RadzenText>
                
                <RadzenSankeyDiagram TNode="SankeyNode" TLink="SankeyLink"
                                   Nodes="@energyNodes" Links="@energyLinks" 
                                   Style="width: 100%; height: 500px"
                                   NodeWidth="24" NodePadding="8"
                                   NodeAlignment="SankeyAlignment.Justify"
                                   MarginLeft="80" MarginRight="80" MarginTop="20" MarginBottom="20">
                </RadzenSankeyDiagram>
            </RadzenCard>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Budget Flow">
            <RadzenCard class="rz-my-4">
                <RadzenText TextStyle="TextStyle.H5" class="rz-mb-4">Budget Flow Example</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-mb-3">Visualize how budget flows from income sources to various expenses.</RadzenText>
                
                <RadzenSankeyDiagram TNode="SankeyNode" TLink="SankeyLink"
                                   Nodes="@budgetNodes" Links="@budgetLinks" 
                                   Style="width: 100%; height: 500px"
                                   NodeWidth="24" NodePadding="8"
                                   NodeAlignment="SankeyAlignment.Justify"
                                   MarginLeft="80" MarginRight="80" MarginTop="20" MarginBottom="20">
                </RadzenSankeyDiagram>
            </RadzenCard>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Multi-Level">
            <RadzenCard class="rz-my-4">
                <RadzenText TextStyle="TextStyle.H5" class="rz-mb-4">Multi-Level Sankey Chart</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-mb-3">This example demonstrates a Sankey chart with multiple levels (5 layers) showing a complex flow.</RadzenText>
                
                <RadzenSankeyDiagram TNode="SankeyNode" TLink="SankeyLink"
                                   Nodes="@multiLevelNodes" Links="@multiLevelLinks" 
                                   Style="width: 100%; height: 500px"
                                   NodeWidth="24" NodePadding="8"
                                   NodeAlignment="SankeyAlignment.Justify"
                                   MarginLeft="80" MarginRight="80" MarginTop="20" MarginBottom="20">
                </RadzenSankeyDiagram>
            </RadzenCard>
        </RadzenTabsItem>
        <RadzenTabsItem Text="How to Use">
            <RadzenCard class="rz-my-4">
                <RadzenText TextStyle="TextStyle.H5" class="rz-mb-4">How to Use RadzenSankeyDiagram</RadzenText>
                
                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">1. Basic Usage</RadzenText>
                <pre class="rz-p-4 rz-mb-4" style="background-color: #f5f5f5; border-radius: 4px; overflow-x: auto;">
&lt;RadzenSankeyDiagram TNode="SankeyNode" TLink="SankeyLink"
                   Nodes="@@nodes" Links="@@links" 
                   NodeWidth="24" NodePadding="8"
                   MarginLeft="60" MarginRight="60" MarginTop="10" MarginBottom="10"
                   Style="width: 100%; height: 400px;"&gt;
&lt;/RadzenSankeyDiagram&gt;</pre>

                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">2. Define Your Data</RadzenText>
                <pre class="rz-p-4 rz-mb-4" style="background-color: #f5f5f5; border-radius: 4px; overflow-x: auto;">
@@code {
    private List&lt;SankeyNode&gt; nodes = new List&lt;SankeyNode&gt;
    {
        new SankeyNode { Id = "A", Label = "Source A", Fill = "#3B82F6" },
        new SankeyNode { Id = "B", Label = "Source B", Fill = "#10B981" },
        new SankeyNode { Id = "C", Label = "Process 1", Fill = "#F59E0B" },
        new SankeyNode { Id = "D", Label = "Process 2", Fill = "#EF4444" },
        new SankeyNode { Id = "E", Label = "Target X", Fill = "#8B5CF6" },
        new SankeyNode { Id = "F", Label = "Target Y", Fill = "#EC4899" },
        new SankeyNode { Id = "G", Label = "Target Z", Fill = "#6366F1" }
    };

    private List&lt;SankeyLink&gt; links = new List&lt;SankeyLink&gt;
    {
        new SankeyLink { Source = "A", Target = "C", Value = 10 },
        new SankeyLink { Source = "A", Target = "D", Value = 15 },
        new SankeyLink { Source = "B", Target = "C", Value = 20 },
        new SankeyLink { Source = "B", Target = "D", Value = 25 },
        new SankeyLink { Source = "C", Target = "E", Value = 15 },
        new SankeyLink { Source = "C", Target = "F", Value = 10 },
        new SankeyLink { Source = "C", Target = "G", Value = 5 },
        new SankeyLink { Source = "D", Target = "E", Value = 20 },
        new SankeyLink { Source = "D", Target = "F", Value = 15 },
        new SankeyLink { Source = "D", Target = "G", Value = 5 }
    };
}</pre>

                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">3. Available Properties</RadzenText>
                <RadzenDataGrid Data="@propertyInfo" TItem="PropertyInfo" AllowFiltering="false" AllowPaging="false" AllowSorting="false">
                    <Columns>
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Name" Title="Property" Width="150px" />
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Type" Title="Type" Width="150px" />
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Default" Title="Default" Width="100px" />
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Description" Title="Description" />
                    </Columns>
                </RadzenDataGrid>

                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">4. Node Properties</RadzenText>
                <RadzenDataGrid Data="@nodePropertyInfo" TItem="PropertyInfo" AllowFiltering="false" AllowPaging="false" AllowSorting="false">
                    <Columns>
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Name" Title="Property" Width="150px" />
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Type" Title="Type" Width="150px" />
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Description" Title="Description" />
                    </Columns>
                </RadzenDataGrid>

                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">5. Link Properties</RadzenText>
                <RadzenDataGrid Data="@linkPropertyInfo" TItem="PropertyInfo" AllowFiltering="false" AllowPaging="false" AllowSorting="false">
                    <Columns>
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Name" Title="Property" Width="150px" />
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Type" Title="Type" Width="150px" />
                        <RadzenDataGridColumn TItem="PropertyInfo" Property="Description" Title="Description" />
                    </Columns>
                </RadzenDataGrid>

                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">6. Node Alignment Options</RadzenText>
                <pre class="rz-p-4 rz-mb-4" style="background-color: #f5f5f5; border-radius: 4px; overflow-x: auto;">
// Available values for NodeAlignment:
SankeyAlignment.Justify  // Nodes fill the width (default)
SankeyAlignment.Left     // Nodes align to the left
SankeyAlignment.Right    // Nodes align to the right
SankeyAlignment.Center   // Nodes center in each column</pre>

                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">7. Color Schemes</RadzenText>
                <pre class="rz-p-4 rz-mb-4" style="background-color: #f5f5f5; border-radius: 4px; overflow-x: auto;">
// Use ColorScheme property for automatic colors
&lt;RadzenSankeyDiagram ColorScheme="ColorScheme.Pastel" ... /&gt;

// Option 1: Automatic colors (omit Fill property)
private List&lt;SankeyNode&gt; nodes = new List&lt;SankeyNode&gt;
{
    new SankeyNode { Id = "A", Label = "Source A" }, // Uses color scheme
    new SankeyNode { Id = "B", Label = "Source B" }, // Uses color scheme
    new SankeyNode { Id = "C", Label = "Target" }    // Uses color scheme
};

// Option 2: Mix automatic and explicit colors
private List&lt;SankeyNode&gt; nodes = new List&lt;SankeyNode&gt;
{
    new SankeyNode { Id = "A", Label = "Source A" },              // Uses color scheme
    new SankeyNode { Id = "B", Label = "Source B", Fill = "#FF0000" }, // Explicit red
    new SankeyNode { Id = "C", Label = "Target" }                 // Uses color scheme
};</pre>

                <RadzenText TextStyle="TextStyle.H6" class="rz-mt-4 rz-mb-2">8. Tips</RadzenText>
                <ul class="rz-pl-4">
                    <li class="rz-mb-2"> Each node must have a unique Id</li>
                    <li class="rz-mb-2"> Link Source and Target must match node Ids</li>
                    <li class="rz-mb-2"> Links automatically inherit color from their source node</li>
                    <li class="rz-mb-2"> Use NodePadding to control vertical spacing between nodes</li>
                    <li class="rz-mb-2"> Use NodeWidth to control the width of node rectangles</li>
                    <li class="rz-mb-2"> The component automatically handles overflow with proper margins</li>
                    <li class="rz-mb-2"> Use ColorScheme for automatic theming</li>
                </ul>
            </RadzenCard>
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code {
    // Configuration variables
    private double nodeWidth = 24;
    private double nodePadding = 8;
    private SankeyAlignment nodeAlignment = SankeyAlignment.Justify;
    
    private IEnumerable<SankeyAlignment> alignments = Enum.GetValues<SankeyAlignment>();
    
    
    // Property documentation
    private class PropertyInfo
    {
        public string Name { get; set; }
        public string Type { get; set; }
        public string Default { get; set; }
        public string Description { get; set; }
    }

    private List<PropertyInfo> propertyInfo = new List<PropertyInfo>
    {
        new PropertyInfo { Name = "Nodes", Type = "IEnumerable<TNode>", Default = "null", Description = "The collection of nodes to display" },
        new PropertyInfo { Name = "Links", Type = "IEnumerable<TLink>", Default = "null", Description = "The collection of links between nodes" },
        new PropertyInfo { Name = "Style", Type = "string", Default = "null", Description = "CSS style for sizing (e.g., 'width: 100%; height: 400px')" },
        new PropertyInfo { Name = "NodeWidth", Type = "double", Default = "24", Description = "The width of node rectangles" },
        new PropertyInfo { Name = "NodePadding", Type = "double", Default = "8", Description = "The vertical padding between nodes" },
        new PropertyInfo { Name = "NodeAlignment", Type = "SankeyAlignment", Default = "Justify", Description = "How nodes are aligned horizontally" },
        new PropertyInfo { Name = "ColorScheme", Type = "ColorScheme", Default = "Pastel", Description = "The color scheme for automatic coloring" },
        new PropertyInfo { Name = "NodeIdProperty", Type = "string", Default = "null", Description = "Property name for node ID" },
        new PropertyInfo { Name = "NodeLabelProperty", Type = "string", Default = "null", Description = "Property name for node label" },
        new PropertyInfo { Name = "NodeFillProperty", Type = "string", Default = "null", Description = "Property name for node fill color" },
        new PropertyInfo { Name = "NodeStrokeProperty", Type = "string", Default = "null", Description = "Property name for node stroke color" },
        new PropertyInfo { Name = "NodeValueProperty", Type = "string", Default = "null", Description = "Property name for node value" },
        new PropertyInfo { Name = "LinkSourceProperty", Type = "string", Default = "null", Description = "Property name for link source ID" },
        new PropertyInfo { Name = "LinkTargetProperty", Type = "string", Default = "null", Description = "Property name for link target ID" },
        new PropertyInfo { Name = "LinkValueProperty", Type = "string", Default = "null", Description = "Property name for link value" },
        new PropertyInfo { Name = "LinkFillProperty", Type = "string", Default = "null", Description = "Property name for link fill color" }
    };

    private List<PropertyInfo> nodePropertyInfo = new List<PropertyInfo>
    {
        new PropertyInfo { Name = "Id", Type = "string", Default = "", Description = "Unique identifier for the node (required)" },
        new PropertyInfo { Name = "Label", Type = "string", Default = "", Description = "Display text for the node" },
        new PropertyInfo { Name = "Fill", Type = "string", Default = "null", Description = "Fill color (omit for automatic coloring)" },
        new PropertyInfo { Name = "Stroke", Type = "string", Default = "null", Description = "Stroke color for the node" },
        new PropertyInfo { Name = "Value", Type = "double?", Default = "null", Description = "Optional fixed value for the node" }
    };

    private List<PropertyInfo> linkPropertyInfo = new List<PropertyInfo>
    {
        new PropertyInfo { Name = "Source", Type = "string", Default = "", Description = "Id of the source node (required)" },
        new PropertyInfo { Name = "Target", Type = "string", Default = "", Description = "Id of the target node (required)" },
        new PropertyInfo { Name = "Value", Type = "double", Default = "", Description = "The flow value for this link (required)" },
        new PropertyInfo { Name = "Fill", Type = "string", Default = "null", Description = "Optional custom fill color (defaults to source node color)" }
    };

    // Basic example data with vibrant colors
    private List<SankeyNode> nodes = new List<SankeyNode>
    {
        new SankeyNode { Id = "A", Label = "Source A", Fill = "#3B82F6" },
        new SankeyNode { Id = "B", Label = "Source B", Fill = "#10B981" },
        new SankeyNode { Id = "C", Label = "Process 1", Fill = "#F59E0B" },
        new SankeyNode { Id = "D", Label = "Process 2", Fill = "#EF4444" },
        new SankeyNode { Id = "E", Label = "Target X", Fill = "#8B5CF6" },
        new SankeyNode { Id = "F", Label = "Target Y", Fill = "#EC4899" },
        new SankeyNode { Id = "G", Label = "Target Z", Fill = "#6366F1" }
    };

    private List<SankeyLink> links = new List<SankeyLink>
    {
        new SankeyLink { Source = "A", Target = "C", Value = 10 },
        new SankeyLink { Source = "A", Target = "D", Value = 15 },
        new SankeyLink { Source = "B", Target = "C", Value = 20 },
        new SankeyLink { Source = "B", Target = "D", Value = 25 },
        new SankeyLink { Source = "C", Target = "E", Value = 15 },
        new SankeyLink { Source = "C", Target = "F", Value = 10 },
        new SankeyLink { Source = "C", Target = "G", Value = 5 },
        new SankeyLink { Source = "D", Target = "E", Value = 20 },
        new SankeyLink { Source = "D", Target = "F", Value = 15 },
        new SankeyLink { Source = "D", Target = "G", Value = 5 }
    };

    // Energy flow example data
    private List<SankeyNode> energyNodes = new List<SankeyNode>
    {
        // Sources
        new SankeyNode { Id = "coal", Label = "Coal", Fill = "#525252" },
        new SankeyNode { Id = "gas", Label = "Natural Gas", Fill = "#3B82F6" },
        new SankeyNode { Id = "nuclear", Label = "Nuclear", Fill = "#10B981" },
        new SankeyNode { Id = "renewable", Label = "Renewable", Fill = "#06B6D4" },
        
        // Conversion
        new SankeyNode { Id = "electricity", Label = "Electricity", Fill = "#F59E0B" },
        new SankeyNode { Id = "heat", Label = "Heat", Fill = "#EF4444" },
        
        // End use
        new SankeyNode { Id = "residential", Label = "Residential", Fill = "#8B5CF6" },
        new SankeyNode { Id = "commercial", Label = "Commercial", Fill = "#EC4899" },
        new SankeyNode { Id = "industrial", Label = "Industrial", Fill = "#6366F1" },
        new SankeyNode { Id = "transport", Label = "Transport", Fill = "#14B8A6" },
        new SankeyNode { Id = "losses", Label = "Losses", Fill = "#9CA3AF" }
    };

    private List<SankeyLink> energyLinks = new List<SankeyLink>
    {
        // Sources to conversion
        new SankeyLink { Source = "coal", Target = "electricity", Value = 45 },
        new SankeyLink { Source = "coal", Target = "heat", Value = 15 },
        new SankeyLink { Source = "gas", Target = "electricity", Value = 30 },
        new SankeyLink { Source = "gas", Target = "heat", Value = 25 },
        new SankeyLink { Source = "nuclear", Target = "electricity", Value = 35 },
        new SankeyLink { Source = "renewable", Target = "electricity", Value = 25 },
        
        // Conversion to end use
        new SankeyLink { Source = "electricity", Target = "residential", Value = 40 },
        new SankeyLink { Source = "electricity", Target = "commercial", Value = 35 },
        new SankeyLink { Source = "electricity", Target = "industrial", Value = 45 },
        new SankeyLink { Source = "electricity", Target = "losses", Value = 15 },
        new SankeyLink { Source = "heat", Target = "residential", Value = 20 },
        new SankeyLink { Source = "heat", Target = "commercial", Value = 10 },
        new SankeyLink { Source = "heat", Target = "industrial", Value = 5 },
        new SankeyLink { Source = "heat", Target = "losses", Value = 5 },
        
        // Direct use
        new SankeyLink { Source = "gas", Target = "transport", Value = 20 },
        new SankeyLink { Source = "renewable", Target = "transport", Value = 5 }
    };

    // Budget flow example data
    private List<SankeyNode> budgetNodes = new List<SankeyNode>
    {
        // Income
        new SankeyNode { Id = "salary", Label = "Salary", Fill = "#10B981" },
        new SankeyNode { Id = "investment", Label = "Investments", Fill = "#06B6D4" },
        new SankeyNode { Id = "other", Label = "Other Income", Fill = "#3B82F6" },
        
        // Categories
        new SankeyNode { Id = "housing", Label = "Housing", Fill = "#F59E0B" },
        new SankeyNode { Id = "food", Label = "Food", Fill = "#EF4444" },
        new SankeyNode { Id = "transport_exp", Label = "Transportation", Fill = "#8B5CF6" },
        new SankeyNode { Id = "utilities", Label = "Utilities", Fill = "#EC4899" },
        new SankeyNode { Id = "entertainment", Label = "Entertainment", Fill = "#6366F1" },
        new SankeyNode { Id = "savings", Label = "Savings", Fill = "#10B981" },
        new SankeyNode { Id = "healthcare", Label = "Healthcare", Fill = "#14B8A6" }
    };

    private List<SankeyLink> budgetLinks = new List<SankeyLink>
    {
        // Income to expenses
        new SankeyLink { Source = "salary", Target = "housing", Value = 2000 },
        new SankeyLink { Source = "salary", Target = "food", Value = 800 },
        new SankeyLink { Source = "salary", Target = "transport_exp", Value = 500 },
        new SankeyLink { Source = "salary", Target = "utilities", Value = 300 },
        new SankeyLink { Source = "salary", Target = "entertainment", Value = 200 },
        new SankeyLink { Source = "salary", Target = "savings", Value = 1000 },
        new SankeyLink { Source = "salary", Target = "healthcare", Value = 200 },
        
        new SankeyLink { Source = "investment", Target = "savings", Value = 500 },
        new SankeyLink { Source = "investment", Target = "entertainment", Value = 100 },
        
        new SankeyLink { Source = "other", Target = "food", Value = 100 },
        new SankeyLink { Source = "other", Target = "entertainment", Value = 100 }
    };

    // Multi-level example data
    private List<SankeyNode> multiLevelNodes = new List<SankeyNode>
    {
        // Level 1 - Sources
        new SankeyNode { Id = "S1", Label = "Source 1", Fill = "#3B82F6" },
        new SankeyNode { Id = "S2", Label = "Source 2", Fill = "#10B981" },
        new SankeyNode { Id = "S3", Label = "Source 3", Fill = "#F59E0B" },
        
        // Level 2 - Primary Processing
        new SankeyNode { Id = "P1", Label = "Process A", Fill = "#EF4444" },
        new SankeyNode { Id = "P2", Label = "Process B", Fill = "#8B5CF6" },
        new SankeyNode { Id = "P3", Label = "Process C", Fill = "#EC4899" },
        
        // Level 3 - Secondary Processing
        new SankeyNode { Id = "SP1", Label = "Refine X", Fill = "#6366F1" },
        new SankeyNode { Id = "SP2", Label = "Refine Y", Fill = "#14B8A6" },
        new SankeyNode { Id = "SP3", Label = "Refine Z", Fill = "#06B6D4" },
        
        // Level 4 - Distribution
        new SankeyNode { Id = "D1", Label = "Dist North", Fill = "#A855F7" },
        new SankeyNode { Id = "D2", Label = "Dist South", Fill = "#F97316" },
        new SankeyNode { Id = "D3", Label = "Dist East", Fill = "#84CC16" },
        new SankeyNode { Id = "D4", Label = "Dist West", Fill = "#06B6D4" },
        
        // Level 5 - Final
        new SankeyNode { Id = "F1", Label = "Market 1", Fill = "#F43F5E" },
        new SankeyNode { Id = "F2", Label = "Market 2", Fill = "#3B82F6" },
        new SankeyNode { Id = "F3", Label = "Market 3", Fill = "#10B981" },
        new SankeyNode { Id = "F4", Label = "Export", Fill = "#6B7280" },
        new SankeyNode { Id = "F5", Label = "Storage", Fill = "#9333EA" }
    };

    private List<SankeyLink> multiLevelLinks = new List<SankeyLink>
    {
        // Level 1 to 2
        new SankeyLink { Source = "S1", Target = "P1", Value = 50 },
        new SankeyLink { Source = "S1", Target = "P2", Value = 30 },
        new SankeyLink { Source = "S2", Target = "P1", Value = 40 },
        new SankeyLink { Source = "S2", Target = "P3", Value = 35 },
        new SankeyLink { Source = "S3", Target = "P2", Value = 45 },
        new SankeyLink { Source = "S3", Target = "P3", Value = 25 },
        
        // Level 2 to 3
        new SankeyLink { Source = "P1", Target = "SP1", Value = 40 },
        new SankeyLink { Source = "P1", Target = "SP2", Value = 30 },
        new SankeyLink { Source = "P1", Target = "SP3", Value = 20 },
        new SankeyLink { Source = "P2", Target = "SP1", Value = 35 },
        new SankeyLink { Source = "P2", Target = "SP2", Value = 25 },
        new SankeyLink { Source = "P2", Target = "SP3", Value = 15 },
        new SankeyLink { Source = "P3", Target = "SP1", Value = 20 },
        new SankeyLink { Source = "P3", Target = "SP2", Value = 20 },
        new SankeyLink { Source = "P3", Target = "SP3", Value = 20 },
        
        // Level 3 to 4
        new SankeyLink { Source = "SP1", Target = "D1", Value = 25 },
        new SankeyLink { Source = "SP1", Target = "D2", Value = 25 },
        new SankeyLink { Source = "SP1", Target = "D3", Value = 20 },
        new SankeyLink { Source = "SP1", Target = "D4", Value = 25 },
        new SankeyLink { Source = "SP2", Target = "D1", Value = 20 },
        new SankeyLink { Source = "SP2", Target = "D2", Value = 25 },
        new SankeyLink { Source = "SP2", Target = "D3", Value = 15 },
        new SankeyLink { Source = "SP2", Target = "D4", Value = 15 },
        new SankeyLink { Source = "SP3", Target = "D1", Value = 15 },
        new SankeyLink { Source = "SP3", Target = "D2", Value = 15 },
        new SankeyLink { Source = "SP3", Target = "D3", Value = 10 },
        new SankeyLink { Source = "SP3", Target = "D4", Value = 15 },
        
        // Level 4 to 5
        new SankeyLink { Source = "D1", Target = "F1", Value = 20 },
        new SankeyLink { Source = "D1", Target = "F2", Value = 15 },
        new SankeyLink { Source = "D1", Target = "F3", Value = 10 },
        new SankeyLink { Source = "D1", Target = "F4", Value = 10 },
        new SankeyLink { Source = "D1", Target = "F5", Value = 5 },
        new SankeyLink { Source = "D2", Target = "F1", Value = 25 },
        new SankeyLink { Source = "D2", Target = "F2", Value = 20 },
        new SankeyLink { Source = "D2", Target = "F3", Value = 15 },
        new SankeyLink { Source = "D2", Target = "F4", Value = 5 },
        new SankeyLink { Source = "D3", Target = "F1", Value = 15 },
        new SankeyLink { Source = "D3", Target = "F2", Value = 10 },
        new SankeyLink { Source = "D3", Target = "F3", Value = 15 },
        new SankeyLink { Source = "D3", Target = "F5", Value = 5 },
        new SankeyLink { Source = "D4", Target = "F1", Value = 10 },
        new SankeyLink { Source = "D4", Target = "F2", Value = 20 },
        new SankeyLink { Source = "D4", Target = "F3", Value = 15 },
        new SankeyLink { Source = "D4", Target = "F4", Value = 10 },
        new SankeyLink { Source = "D4", Target = "F5", Value = 5 }
    };
}