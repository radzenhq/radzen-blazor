@using Radzen.Blazor.Rendering
@using System.Linq
@using System.Collections
@using Radzen
@using Microsoft.AspNetCore.Components.Forms
@typeparam TValue
@inherits FormComponent<TValue>

@if (Items != null)
{
    <CascadingValue Value=this>
        @Items
    </CascadingValue>
}
@if (Visible)
{
    <div @ref="@Element" style="@Style" @attributes="Attributes" class="@GetCssClass()" id="@GetId()">
        @foreach (var item in allItems.Where(i => i.Visible))
        {
            <div @ref="@item.Element" id="@item.GetItemId()" @onclick="@(args => SelectItem(item))" @attributes="item.Attributes" class="@item.GetItemCssClass()" style="@item.Style">
                <div class="rz-radiobutton" @onkeypress="@(args => OnKeyPress(args, SelectItem(item)))" @onkeypress:preventDefault=preventKeyPress @onkeypress:stopPropagation tabindex="@(Disabled || item.Disabled ? "-1" : $"{TabIndex}")">
                    <div class="rz-helper-hidden-accessible">
                        <input type="radio" disabled="@Disabled" name="@Name" value="@item.Value" tabindex="-1" aria-label="@(item.Text + " " + item.Value)" @attributes="item.InputAttributes">
                    </div>
                    <div class=@ItemClassList(item)>
                        <span class=@IconClassList(item)></span>
                    </div>
                </div>
                @if (item.Template != null)
                {
                    <div class="rz-radiobutton-template" @onkeydown:stopPropagation>
                        @item.Template(item)
                    </div>
                } 
                else 
                {
                    <span class="rz-radiobutton-label">@item.Text</span>
                }
            </div>
        }
    </div>
}
