@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using Radzen.Blazor.Spreadsheet
@using Radzen.Blazor.Spreadsheet.Tools
@using Radzen.Blazor.Rendering
@inherits RadzenComponent

<div @ref=@Element class=@GetCssClass() style=@Style @attributes=@Attributes tabindex="0">
    <CascadingValue TValue="ISpreadsheet" Value=this IsFixed="true">
        <RadzenTabs SelectedIndex="1">
            <Tabs>
                <RadzenTabsItem Text="File">
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <Open WorkbookChanged=@OnWorkbookChangedAsync />
                        <Save Workbook=@workbook FileName=@ExportFileName />
                    </RadzenStack>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Home">
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <RadzenStack Orientation="Orientation.Horizontal">
                            <Undo Commands=@Sheet?.Commands />
                            <Redo Commands=@Sheet?.Commands />
                        </RadzenStack>
                        <RadzenStack Orientation="Orientation.Horizontal">
                            <Bold Sheet=@Sheet />
                            <Italic Sheet=@Sheet />
                            <Underline Sheet=@Sheet />
                            <Color Sheet=@Sheet />
                            <BackgroundColor Sheet=@Sheet />
                        </RadzenStack>
                        <RadzenStack Orientation="Orientation.Horizontal">
                            <TextAlign Sheet=@Sheet />
                            <VerticalAlign Sheet=@Sheet />
                        </RadzenStack>
                    </RadzenStack>
                </RadzenTabsItem>
                <RadzenTabsItem Text="View">
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <Freeze Sheet=@Sheet />
                    </RadzenStack>
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
@if (Sheet != null)
{
        <FormulaEditor Sheet=@Sheet />
        <VirtualGrid @ref=@grid style="flex: 1" Rows=@Sheet.Rows Columns=@Sheet.Columns MergedCells=@Sheet.MergedCells>
            <Template>
                @switch (context)
                {
                    case VirtualCorner corner:
                        <CornerHeaderCell Rect=@context.Rect />
                        break;
                    case VirtualColumnHeader column:
                        <ColumnHeader Sheet=@Sheet FrozenState=@column.FrozenState Column=@column.Column Rect=@context.Rect />
                        break;
                    case VirtualRowHeader row:
                        <RowHeader Sheet=@Sheet FrozenState=@row.FrozenState Row=@row.Row Rect=@context.Rect />
                        break;
                    case VirtualDataItem item:
                        <CellView Sheet=@Sheet Column=@item.Column Row=@item.Row FrozenState=@item.FrozenState Rect=@context.Rect Toggle=@OnCellToggleAsync />
                        break;
                    case VirtualHorizontalSplitter horizontalSplitter:
                        <Splitter class="rz-spreadsheet-horizontal-splitter" Rect=@horizontalSplitter.Rect />
                        break;
                    case VirtualVerticalSplitter verticalSplitter:
                        <Splitter class="rz-spreadsheet-vertical-splitter" Rect=@verticalSplitter.Rect />
                        break;
                }
            </Template>
            <ChildContent>
                <SelectionOverlay Sheet=@Sheet Context=@context />
                <CellEditor Sheet=@Sheet Context=@context />
                @foreach (var dataTable in Sheet.DataTables)
                {
                    <DataTableFrame Sheet=@Sheet DataTable=@dataTable Context=@context />
                }
            </ChildContent>
        </VirtualGrid>
        <Popup @ref=@cellMenuPopup class="rz-spreadsheet-cell-popup rz-context-menu" Lazy="true">
            @if (cellMenuRow >= 0 && cellMenuColumn >= 0)
            {
                <CellMenu Sheet=@Sheet Row=@cellMenuRow Column=@cellMenuColumn Cancel=@OnCellMenuCancelAsync Apply=@OnCellMenuApplyAsync />
            }
        </Popup>
}
    </CascadingValue>
</div>