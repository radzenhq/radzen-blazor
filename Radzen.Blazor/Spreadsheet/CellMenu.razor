@using Microsoft.AspNetCore.Components.Web
@using Radzen.Blazor.Rendering
<ul class="rz-menu rz-spreadsheet-cell-menu">
    <CellMenuItem Text="Sort A to Z" Icon="sort" Click=@OnSortAscendingAsync />
    <CellMenuItem Text="Sort Z to A" Icon="sort" Click=@OnSortDescendingAsync />
    <div class="rz-spreadsheet-cell-menu-filter">
        <CellMenuItem>
            <RadzenCheckBox TValue="bool?" Value=@IsSelectAllChecked() Change=@OnSelectAllChanged TriState="true" />
            <RadzenLabel Text="(Select All)" />
        </CellMenuItem>
        @foreach (var item in LoadAvailableValues())
        {
            <CellMenuItem>
                <RadzenCheckBox TValue="bool" Value=@IsValueSelected(item.Value) Change=@(isChecked => OnValueSelectionChanged(item.Value, isChecked)) />
                <RadzenLabel Text=@item.Text />
            </CellMenuItem>
        }
        @if (ShouldShowBlankOption())
        {
            <CellMenuItem>
                <RadzenCheckBox TValue="bool" Value=@IsBlankSelected() Change=@OnBlankSelectionChanged />
                <RadzenLabel Text="(Blank)" />
            </CellMenuItem>
        }
    </div>
    <RadzenStack Orientation="Orientation.Horizontal" Gap="10px" JustifyContent="JustifyContent.End">
        <RadzenButton Text="OK" Click=@OnApplyFilterAsync ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Disabled=@(!CanApplyFilter()) />
        <RadzenButton Text="Cancel" Click=@OnCancelFilterAsync ButtonStyle="ButtonStyle.Base" Size="ButtonSize.Small" />
    </RadzenStack>
</ul>