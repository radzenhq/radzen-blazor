@using Radzen.Blazor
@inherits RadzenComponent
@inject TooltipService TooltipService

@if (Visible)
{
<div @ref="@Element" for="@Component" style="@Style" @attributes="Attributes" class="@GetCssClass()" id="@GetId()" onfocusin="this.classList.add('rz-state-focused')" onfocusout="this.classList.remove('rz-state-focused')">
    <div class="rz-form-field-content">
        <CascadingValue Value=@context>
        @if (Start != null)
        {
        <div class="rz-form-field-start">
            @Start
        </div>
        }
        @ChildContent
        <label class="rz-form-field-label rz-text-truncate" for=@Component>  @if (TextTemplate is null) {@Text} else {@TextTemplate} </label>
        @if (End != null || !string.IsNullOrEmpty(InfoText))
        {
        <div class="rz-form-field-end">
            @if (End != null)
            {
                @End
            }
            @if (!string.IsNullOrEmpty(InfoText))
            {
                <RadzenIcon Icon="@InfoIcon" IconColor="@InfoIconColor" @ref="infoHelper"
                            @onmouseenter="@(_ => OpenInfoTooltip(infoHelper.Element, InfoText))"/>
            }
        </div>
        }
        </CascadingValue>
    </div>
    @if (Helper != null)
    {
    <div class="rz-form-field-helper">
        @Helper
    </div>
    }
</div>
}
